# with open('спринт_8.txt', 'w') as f:
#     f.write('A.Разворот_строки')
"""
У Риты была строка s, Гоша подарил ей на 8 марта ещё n других строк ti, 1≤ i≤ n. 
Теперь Рита думает, куда их лучше поставить. Один из вариантов —– расположить подаренные строки 
внутри имеющейся строки s, поставив строку ti сразу после символа строки s с номером ki 
(в частности, если ki=0, то строка вставляется в самое начало s).

Помогите Рите и определите, какая строка получится после вставки в s всех подаренных Гошей строк.

Формат ввода
В первой строке дана строка s. 
Строка состоит из строчных букв английского алфавита, 
не бывает пустой и её длина не превышает 105 символов.

Во второй строке записано количество подаренных строк — натуральное число n, 1 ≤ n ≤ 10^5.
В каждой из следующих n строк через пробел записаны пары ti и ki. 
Строка ti состоит из маленьких латинских букв и не бывает пустой. 
ki — целое число, лежащее в диапазоне от 0 до |s|. 
Все числа ki уникальны. 
Гарантируется, что суммарная длина всех строк ti не превосходит 10^5.

Формат вывода
Выведите получившуюся в результате вставок строку.

Пример 1
Ввод	                    Вывод
abacaba             deque ab queue acaba stack
3
queue 2
deque 0
stack 7

Пример 2
Ввод	                            Вывод
kukareku                    kpuqkareku
2
p 1
q 2
"""
s = 'abacaba'
n = 3
# собираю все новые строки в список tuple где первый строка а второй номер позиции
str_to_insert = [('queue', 2), ('deque', 0), ('stack', 7)]
# сортирую по позиции вставки
sorted_list = sorted(str_to_insert, key = lambda str_num: str_num[1])
# сюда собираю результат
result = ''
# инициирую позиции вставки, если нужно будет вставлять в 0 позицию то ничего не вставится
start, end = 0, 0
for el in sorted_list:
    end = el[1] #теперь конец вставки это элемент на место которого вставили и он не войдет в диапазон
    result += s[start:end] + el[0] # вставляю до элемента куда вставили и саму строку для вставки
    start = end # потомучто сюда уже не вставляем и он войдет на след итерации в строку
# теперь у нас закончились строки для вставки проверяем осталась ли исходная строка
if start < len(s1):
    result += s1[start:]
print(result)